{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/CodeCast/client/src/components/EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Client from \"./Client\";\nimport Editor from \"./Editor\";\nimport { initSocket } from \"../Socket\";\nimport { ACTIONS } from \"../Actions\";\nimport { useNavigate, useLocation, Navigate, useParams } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport './EditorPage.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditorPage() {\n  _s();\n  const [clients, setClients] = useState([]);\n  const codeRef = useRef(null);\n  const Location = useLocation();\n  const navigate = useNavigate();\n  const {\n    roomId\n  } = useParams();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    const init = async () => {\n      var _Location$state;\n      socketRef.current = await initSocket();\n      socketRef.current.on(\"connect_error\", err => handleErrors(err));\n      socketRef.current.on(\"connect_failed\", err => handleErrors(err));\n      const handleErrors = err => {\n        console.log(\"Error\", err);\n        toast.error(\"Socket connection failed, Try again later\");\n        navigate(\"/\");\n      };\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_Location$state = Location.state) === null || _Location$state === void 0 ? void 0 : _Location$state.username\n      });\n\n      // Listen for new clients joining the chatroom\n      socketRef.current.on(ACTIONS.JOINED, ({\n        clients,\n        username,\n        socketId\n      }) => {\n        var _Location$state2;\n        // this insure that new user connected message do not display to that user itself\n        if (username !== ((_Location$state2 = Location.state) === null || _Location$state2 === void 0 ? void 0 : _Location$state2.username)) {\n          toast.success(`${username} joined the room.`);\n        }\n        setClients(clients);\n        // also send the code to sync\n        socketRef.current.emit(ACTIONS.SYNC_CODE, {\n          code: codeRef.current,\n          socketId\n        });\n      });\n\n      // listening for disconnected\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({\n        socketId,\n        username\n      }) => {\n        toast.success(`${username} left the room`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId !== socketId);\n        });\n      });\n    };\n    init();\n\n    // cleanup\n    return () => {\n      socketRef.current && socketRef.current.disconnect();\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n    };\n  }, []);\n  if (!Location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  const copyRoomId = async () => {\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success(`Room ID is copied`);\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Unable to copy the Room ID\");\n    }\n  };\n  const leaveRoom = async () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/logo.png\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"client-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"conn\",\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n          username: client.username\n        }, client.socketId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: copyRoomId,\n          children: \"Copy Room ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: leaveRoom,\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-panel\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        socketRef: socketRef,\n        roomId: roomId,\n        onCodeChange: code => {\n          codeRef.current = code;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(EditorPage, \"z4Ufx/W85YgVa2DHNMTPZJ9dX7s=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Client","Editor","initSocket","ACTIONS","useNavigate","useLocation","Navigate","useParams","toast","jsxDEV","_jsxDEV","EditorPage","_s","clients","setClients","codeRef","Location","navigate","roomId","socketRef","init","_Location$state","current","on","err","handleErrors","console","log","error","emit","JOIN","username","state","JOINED","socketId","_Location$state2","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","disconnect","off","to","fileName","_jsxFileName","lineNumber","columnNumber","copyRoomId","navigator","clipboard","writeText","leaveRoom","className","children","src","alt","map","onClick","onCodeChange","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/CodeCast/client/src/components/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Client from \"./Client\";\nimport Editor from \"./Editor\";\nimport { initSocket } from \"../Socket\";\nimport { ACTIONS } from \"../Actions\";\nimport {\n  useNavigate,\n  useLocation,\n  Navigate,\n  useParams,\n} from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport './EditorPage.css';  // Import the CSS file\n\nfunction EditorPage() {\n  const [clients, setClients] = useState([]);\n  const codeRef = useRef(null);\n\n  const Location = useLocation();\n  const navigate = useNavigate();\n  const { roomId } = useParams();\n\n  const socketRef = useRef(null);\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initSocket();\n      socketRef.current.on(\"connect_error\", (err) => handleErrors(err));\n      socketRef.current.on(\"connect_failed\", (err) => handleErrors(err));\n\n      const handleErrors = (err) => {\n        console.log(\"Error\", err);\n        toast.error(\"Socket connection failed, Try again later\");\n        navigate(\"/\");\n      };\n\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: Location.state?.username,\n      });\n\n      // Listen for new clients joining the chatroom\n      socketRef.current.on(\n        ACTIONS.JOINED,\n        ({ clients, username, socketId }) => {\n          // this insure that new user connected message do not display to that user itself\n          if (username !== Location.state?.username) {\n            toast.success(`${username} joined the room.`);\n          }\n          setClients(clients);\n          // also send the code to sync\n          socketRef.current.emit(ACTIONS.SYNC_CODE, {\n            code: codeRef.current,\n            socketId,\n          });\n        }\n      );\n\n      // listening for disconnected\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({ socketId, username }) => {\n        toast.success(`${username} left the room`);\n        setClients((prev) => {\n          return prev.filter((client) => client.socketId !== socketId);\n        });\n      });\n    };\n    init();\n\n    // cleanup\n    return () => {\n      socketRef.current && socketRef.current.disconnect();\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n    };\n  }, []);\n\n  if (!Location.state) {\n    return <Navigate to=\"/\" />;\n  }\n\n  const copyRoomId = async () => {\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success(`Room ID is copied`);\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Unable to copy the Room ID\");\n    }\n  };\n\n  const leaveRoom = async () => {\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"sidebar\">\n        <img src=\"/images/logo.png\" alt=\"Logo\" />\n        <div className=\"client-list\">\n          <span className=\"conn\">Connected</span>\n          {clients.map((client) => (\n            <Client key={client.socketId} username={client.username} />\n          ))}\n        </div>\n        <hr />\n        <div className=\"buttons\">\n          <button className=\"btn btn-success\" onClick={copyRoomId}>\n            Copy Room ID\n          </button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={leaveRoom}\n          >\n            Leave\n          </button>\n        </div>\n      </div>\n      <div className=\"editor-panel\">\n        <Editor\n          socketRef={socketRef}\n          roomId={roomId}\n          onCodeChange={(code) => {\n            codeRef.current = code;\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default EditorPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}